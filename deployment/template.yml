Parameters:
  githubtoken:
    Type: String
  stackName:
    Type: String
  bucketName:
    Type: String
    Default: codepipelineucketfortesting
  gitrepo:
    Type: String
    Default: test-serverless

Resources:
  SNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: confirmationmessages
  CodeBuildSourceCredential:
    Type: AWS::CodeBuild::SourceCredential
    Properties:
      AuthType: PERSONAL_ACCESS_TOKEN
      ServerType: GITHUB
      Token:
        Ref: githubtoken
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Ref stackName
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Triggers:
        Webhook: true
        FilterGroups:
          - - Type: EVENT
              Pattern: PULL_REQUEST_CREATED,PULL_REQUEST_UPDATED,PULL_REQUEST_MERGED
      Artifacts:
        Type: NO_ARTIFACTS
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:4.0
      Source:
        Type: GITHUB
        Location: https://github.com/codertarasvaskivepam/test-serverless.git
        GitCloneDepth: 1
        Auth:
          Resource: !Ref CodeBuildSourceCredential
          Type: OAUTH
      TimeoutInMinutes: 10
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: [ 'sts:AssumeRole' ]
            Effect: Allow
            Principal:
              Service: [ codebuild.amazonaws.com ]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CodeBuildAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - 'logs:*'
                  - 'ec2:CreateNetworkInterface'
                  - 'ec2:DescribeNetworkInterfaces'
                  - 'ec2:DeleteNetworkInterface'
                  - 'ec2:DescribeSubnets'
                  - 'ec2:DescribeSecurityGroups'
                  - 'ec2:DescribeDhcpOptions'
                  - 'ec2:DescribeVpcs'
                  - 'ec2:CreateNetworkInterfacePermission'
                  - 'cloudformation:DescribeStacks'
                  - 'cloudformation:ValidateTemplate'
                  - 'cloudformation:ListStackResources'
                  - 'cloudformation:CreateStack'
                  - 'cloudformation:DescribeStackEvents'
                  - 'cloudformation:DescribeStackResource'
                  - 'cloudformation:UpdateStack'
                  - 'states:CreateStateMachine'
                  - 'states:TagResource'
                  - 'apigateway:*'
                  - 'kinesis:*'
                  - 'dynamodb:*'
                  - 'iam:*'
                  - 'lambda:*'
                  - 's3:*'
                Effect: Allow
                Resource: '*'
#  AppPipelineWebhook:
#    Type: AWS::CodePipeline::Webhook
#    Properties:
#      Authentication: GITHUB_HMAC
#      AuthenticationConfiguration:
#        SecretToken: !Sub ${githubtoken}
#      TargetPipeline: !Ref CodePipeline
#      TargetAction: SourceAction
#      Name: AppPipelineWebhook
#      TargetPipelineVersion: !GetAtt CodePipeline.Version
#      RegisterWithThirdParty: true
  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: [ 'sts:AssumeRole' ]
            Effect: Allow
            Principal:
              Service: [ codepipeline.amazonaws.com ]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CodeBuildAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - 'logs:*'
                  - 's3:*'
                  - 'codebuild:*'
                Effect: Allow
                Resource: '*'
  CodePipelineBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${bucketName}-bucket
  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Ref stackName
      RoleArn: !GetAtt "CodePipelineRole.Arn"
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              OutputArtifacts:
                - Name: SourceOutput
              Configuration:
                Repo: !Sub ${gitrepo}
                Branch: master
                Owner: codertarasvaskivepam
                OAuthToken: "2838ad08ad501e9b9aea33a543f176d929c425a8"
              RunOrder: 1
        - Name: launch-tests
          Actions:
            - Name: run-tests
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              InputArtifacts:
                - Name: SourceOutput
              Configuration:
                ProjectName: !Ref CodeBuildProject
              RunOrder: 1
        - Name: manual-approve
          Actions:
              - Name: ManualAPprove
                ActionTypeId:
                  Category: Approval
                  Owner: AWS
                  Version: 1
                  Provider: Manual
                Configuration:
                  NotificationArn: !Ref SNSTopic
                RunOrder: 1
      ArtifactStore:
        Type: S3
        Location: !Ref CodePipelineBucket

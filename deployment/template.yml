Parameters:
  githubtoken:
    Type: String

Resources:
  CodeBuildSourceCredential:
    Type: AWS::CodeBuild::SourceCredential
    Properties:
      AuthType: PERSONAL_ACCESS_TOKEN
      ServerType: GITHUB
      Token:
        Ref: githubtoken
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: test-serverless
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: NO_ARTIFACTS
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:4.0
      Source:
        Type: GITHUB
        Location: https://github.com/codertarasvaskivepam/test-serverless.git
        GitCloneDepth: 1
        Auth:
          Resource: !Ref CodeBuildSourceCredential
          Type: OAUTH
      TimeoutInMinutes: 10
      Triggers:
        Webhook: true
        FilterGroups:
          - - Type: EVENT
              Pattern: PULL_REQUEST_CREATED,PULL_REQUEST_UPDATED,PULL_REQUEST_MERGED
            - Type: BASE_REF
              Pattern: ^refs/heads/master$
              ExcludeMatchedPattern: false
            - Type: BASE_REF
              Pattern: ^refs/heads/production$
              ExcludeMatchedPattern: false
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: [ 'sts:AssumeRole' ]
            Effect: Allow
            Principal:
              Service: [ codebuild.amazonaws.com ]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CodeBuildAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - 'logs:*'
                  - 'ec2:CreateNetworkInterface'
                  - 'ec2:DescribeNetworkInterfaces'
                  - 'ec2:DeleteNetworkInterface'
                  - 'ec2:DescribeSubnets'
                  - 'ec2:DescribeSecurityGroups'
                  - 'ec2:DescribeDhcpOptions'
                  - 'ec2:DescribeVpcs'
                  - 'ec2:CreateNetworkInterfacePermission'
                  - 'cloudformation:DescribeStacks'
                  - 'cloudformation:ValidateTemplate'
                  - 'cloudformation:ListStackResources'
                  - 'cloudformation:CreateStack'
                  - 'cloudformation:DescribeStackEvents'
                  - 'cloudformation:DescribeStackResource'
                  - 'cloudformation:UpdateStack'
                  - 'states:CreateStateMachine'
                  - 'states:TagResource'
                  - 'apigateway:*'
                  - 'kinesis:*'
                  - 'dynamodb:*'
                  - 'iam:*'
                  - 'lambda:*'
                  - 's3:*'
                Effect: Allow
                Resource: '*'
